#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&to 3>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R  &kp T            &kp Y      &kp U  &kp I         &kp O    &kp SEMICOLON  &kp ESCAPE
&kp LEFT_SHIFT    &kp A  &kp S  &kp D         &kp F  &kp G            &kp H      &kp J  &kp K         &kp L    &kp P          &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C         &kp V  &kp B            &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH       &kp ENTER
                                &kp LEFT_ALT  &mo 1  &kp BACKSPACE    &kp SPACE  &mo 2  &kp LEFT_GUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp CAPSLOCK  &kp EXCL       &kp AT            &kp HASH              &kp DLLR               &kp PRCNT    &kp KP_MULTIPLY  &kp N7      &kp N8  &kp N9  &kp KP_DIVIDE  &kp BACKSLASH
&kp LSHFT     &kp CARET      &kp AMPERSAND     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE    &kp MINUS        &kp N4      &kp N5  &kp N6  &kp PLUS       &kp EQUAL
&kp LCTRL     &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL    &kp UNDER        &kp N1      &kp N2  &kp N3  &kp PERIOD     &kp ENTER
                                               &trans                &trans                 &kp BSPC     &kp SPACE        &kp DELETE  &kp N0
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &trans          &trans        &trans             &trans           &trans              &trans    &trans    &kp UP    &trans     &trans     &bt BT_CLR
&kp LSHFT  &kp C_PREVIOUS  &kp C_NEXT    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE    &kp HOME  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_UP  &trans
&kp LCTRL  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4        &kp END   &trans    &trans    &trans     &kp PG_DN  &mo 0
                                         &trans             &kp LCTRL        &trans              &trans    &trans    &trans
            >;
        };

        third_layer {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4     &kp N5       &kp KP_MULTIPLY  &kp N7   &kp N8  &kp N9  &kp FSLH  &kp ESC
&kp LSHFT  &kp F1  &kp F2  &kp F3  &kp F4     &kp F5       &kp MINUS        &kp N4   &kp N5  &kp N6  &kp PLUS  &kp EQUAL
&kp LCTRL  &kp N6  &kp N7  &kp N8  &kp N9     &kp N0       &kp LS(UNDER)    &kp N1   &kp N2  &kp N3  &kp DOT   &kp RET
                           &to 0   &kp SPACE  &kp LCTRL    &kp BSPC         &kp DEL  &kp N0
            >;
        };
    };
};
